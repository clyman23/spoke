vars:
  - sr: ../../spoke/data_processing

stages:
  create_map:
    foreach: ${config}
    do:
      desc: Generate an OSMnx map of our target area.
      cmd: python ${sr}/00_create_map.py ${item.map_clipping_boundary}
      wdir: pipeline_data/${key}
      outs:
        - target_map.graphml
  normalize_weather_data:
    foreach: ${config}
    do:
      desc: Prepare weather data for usage in system.
      cmd: python ${sr}/01_normalizing_weather_data.py ${item.time_period_start} ${item.time_period_end}
      wdir: pipeline_data/${key}
      deps:
        - ../raw_data/weather/
      outs:
        - weather_data_normalized.pkl.gz
  normalize_crash_data:
    foreach: ${config}
    do:
      desc: Prepare crash data for usage in system.
      cmd: python ${sr}/02_normalizing_crash_data.py ${item.time_period_start} ${item.time_period_end}
      wdir: pipeline_data/${key}
      deps:
        - ../raw_data/Motor_Vehicle_Collisions_-_Crashes.csv
      outs:
        - crash_data_normalized.pkl.gz
  join_crash_data_to_nodes:
    foreach: ${config}
    do:
      desc: Join crash data to street graph nodes.
      cmd: python ${sr}/03_joining_crash_data_to_nodes.py ${item.crash_threshold_dist_m}
      wdir: pipeline_data/${key}
      deps:
        - target_map.graphml
        - crash_data_normalized.pkl.gz
      outs:
        - crash_data_normalized_with_node_graph.pkl.gz
  normalize_citibike_data:
    foreach: ${config}
    do:
      desc: Filter trip data and associate trips with street graph nodes
      cmd: python ${sr}/04_normalizing_citibike_data.py ${item.time_period_start} ${item.time_period_end} ${item.trip_threshold_dist_m} ${item.trip_sample_size}
      wdir: pipeline_data/${key}
      deps:
        - target_map.graphml
        - ../raw_data/citibike/
      outs:
        - trip_data_normalized.pkl.gz
  join_all_data:
    foreach: ${config}
    do:
      desc: Unify all datasets into a single dataset
      cmd: python ${sr}/05_joining_all_data.py
      wdir: pipeline_data/${key}
      deps:
        - weather_data_normalized.pkl.gz
        - crash_data_normalized_with_node_graph.pkl.gz
        - trip_data_normalized.pkl.gz
        - target_map.graphml
      outs:
        - unified_dataset.parquet
  associate_ctas_to_nodes:
    foreach: ${config}
    do:
      desc: Generate a lookup table for nodes and census tracts
      cmd: python ${sr}/06_associate_ctas_to_nodes.py
      wdir: pipeline_data/${key}
      deps:
        - target_map.graphml
        - ../raw_data/2010_Census_Tracts/geo_export_85c202c5-6ec9-493e-b0ec-a13efa26758d.shp
      outs:
        - node_id_census_tract_key.pkl.gz
  compute_danger:
    foreach: ${config}
    do:
      desc: Compute danger metric
      cmd: python ${sr}/07_compute_danger.py
      wdir: pipeline_data/${key}
      deps:
        - target_map.graphml
        - node_id_census_tract_key.pkl.gz
        - unified_dataset.parquet
      outs:
        - target_map_consolidated.graphml
        - danger_by_node_id.pkl.gz
  generate_heatmaps:
    foreach: ${config}
    do:
      desc: Generate heatmaps for resulting danger metrics
      cmd: python ${sr}/08_generate_heatmaps.py
      wdir: pipeline_data/${key}
      deps:
        - target_map_consolidated.graphml
        - danger_by_node_id.pkl.gz
  prepare_training_data:
    foreach: ${config}
    do:
      desc: Prepare unified dataset for use in ML algorithms and dump out training, test, and eval splits
      cmd: python ${sr}/09_prepare_training_data.py ${item.random_state} ${item.train_ratio} ${item.validation_ratio} ${item.test_ratio}
      wdir: pipeline_data/${key}
      deps:
        - unified_dataset.parquet
      outs:
        - train.parquet
        - eval.parquet
        - test.parquet