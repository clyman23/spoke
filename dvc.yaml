vars:
  - year: '2019'
  - sr: spoke/data_processing
  - dr: pipeline_data/

stages:
  create_map:
    desc: Generate an OSMnx map of our target area.
    cmd: python ${sr}/00_create_map.py ${map_clipping_boundary}
    outs:
      - ${dr}/target_map.graphml
  normalize_weather_data:
    desc: Prepare weather data for usage in system.
    cmd: python ${sr}/01_normalizing_weather_data.py ${time_period_start} ${time_period_end}
    deps:
      - ${dr}/raw_data/weather/
    outs:
      - ${dr}/weather_data_normalized.pkl.gz
  normalize_crash_data:
    desc: Prepare crash data for usage in system.
    cmd: python ${sr}/02_normalizing_crash_data.py
    deps:
      - ${dr}/raw_data/Motor_Vehicle_Collisions_-_Crashes.csv
    outs:
      - ${dr}/crash_data_normalized.pkl.gz
  join_crash_data_to_nodes:
    desc: Join crash data to street graph nodes.
    cmd: python ${sr}/03_joining_crash_data_to_nodes.py
    deps:
      - ${dr}/target_map.graphml
      - ${dr}/crash_data_normalized.pkl.gz
    outs:
      - ${dr}/crash_data_normalized_with_node_graph.pkl.gz
  normalize_citibike_data:
    desc: Filter trip data and associate trips with street graph nodes
    cmd: python ${sr}/04_normalizing_citibike_data.py
    deps:
      - ${dr}/target_map.graphml
      - ${dr}/raw_data/citibike/
    outs:
      - ${dr}/trip_data_normalized.pkl.gz
  join_all_data:
    desc: Unify all datasets into a single dataset
    cmd: python ${sr}/05_joining_all_data.py
    deps:
      - ${dr}/weather_data_normalized.pkl.gz
      - ${dr}/crash_data_normalized_with_node_graph.pkl.gz
      - ${dr}/trip_data_normalized.pkl.gz
    outs:
      - ${dr}/unified_dataset.pkl.gz
  associate_ctas_to_nodes:
    desc: Generate a lookup table for nodes and census tracts
    cmd: python ${sr}/06_associate_ctas_to_nodes.py
    deps:
      - ${dr}/target_map.graphml
      - ${dr}/raw_data/2010_Census_Tracts/geo_export_85c202c5-6ec9-493e-b0ec-a13efa26758d.shp
      - ${dr}/unified_dataset.pkl.gz
    outs:
      - ${dr}/node_id_census_tract_key.pkl.gz
  compute_danger:
    desc: Compute danger metric
    cmd: python ${sr}/07_compute_danger.py
    deps:
      - ${dr}/target_map.graphml
      - ${dr}/node_id_census_tract_key.pkl.gz
      - ${dr}/unified_dataset.pkl.gz
    outs:
      - ${dr}/target_map_consolidated.graphml
      - ${dr}/danger_by_node_id.pkl.gz
  generate_heatmaps:
    desc: Generate heatmaps for resulting danger metrics
    cmd: python ${sr}/08_generate_heatmaps.py
    deps:
      - ${dr}/target_map_consolidated.graphml
      - ${dr}/danger_by_node_id.pkl.gz